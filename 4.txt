DECLARE
    v_Roll_no        Borrower.Roll_no%TYPE;
    v_NameofBook     Borrower.NameofBook%TYPE;
    v_DateofIssue    Borrower.DateofIssue%TYPE;
    v_Status         Borrower.Status%TYPE;
    v_Today          DATE := SYSDATE;
    v_Days           NUMBER;
    v_Fine           NUMBER := 0;
    fine_exception EXCEPTION;

BEGIN
    -- Accept Roll_no and NameofBook from user
    v_Roll_no := &Roll_no;  -- Input Roll_no
    v_NameofBook := '&NameofBook';  -- Input NameofBook

    -- Retrieve DateofIssue and Status for the given Roll_no and NameofBook
    SELECT DateofIssue, Status INTO v_DateofIssue, v_Status
    FROM Borrower
    WHERE Roll_no = v_Roll_no AND NameofBook = v_NameofBook;

    -- Calculate the number of days since the book was issued
    v_Days := v_Today - v_DateofIssue;

    -- Determine the fine amount based on the number of days
    IF v_Days BETWEEN 15 AND 30 THEN
        v_Fine := v_Days * 5;  -- Fine of Rs 5 per day
    ELSIF v_Days > 30 THEN
        v_Fine := v_Days * 50;  -- Fine of Rs 50 per day
    END IF;

    -- Update the Borrower table to set Status to 'R' (returned)
    UPDATE Borrower
    SET Status = 'R'
    WHERE Roll_no = v_Roll_no AND NameofBook = v_NameofBook;

    -- If there is a fine, insert the fine details into the Fine table
    IF v_Fine > 0 THEN
        INSERT INTO Fine (Roll_no, Date, Amt)
        VALUES (v_Roll_no, v_Today, v_Fine);
    ELSE
        RAISE fine_exception;  -- Raise exception if no fine is applicable
    END IF;

    -- Display success message
    DBMS_OUTPUT.PUT_LINE('Book returned successfully. Fine amount: ' || v_Fine);

-- Exception handling
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No record found for Roll_no ' || v_Roll_no || ' and Book "' || v_NameofBook || '".');
    WHEN fine_exception THEN
        DBMS_OUTPUT.PUT_LINE('Book returned with no fine.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;
